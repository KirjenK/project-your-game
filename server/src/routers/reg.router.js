const router = require('express').Router();
const bcrypt = require('bcrypt');
const { User } = require('../../db/models');

router.post('/', async (req, res) => {
  try {
    const {
      name, email, password, repeatPassword,
    } = req.body;
    const findUser = await User.findOne({ where: { name } });
    if (password !== repeatPassword) {
      res.json({ status: 404, message: '–ø–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç' });
    } else if (!name?.trim() || !password?.trim() || !repeatPassword?.trim()) {
      res.json({ status: 'error', message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è' });
    } else if (findUser?.name === name) {
      res.json({ status: 404, message: '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' });
    } else if (password.length < 4) {
      res.json({ status: 404, message: '–ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤' });
    } else {
      const hashedPassword = await bcrypt.hash(password, 10);
      const newUser = await User.create({ name, email, password: hashedPassword });
      req.session.username = newUser.name;
      req.session.userId = newUser.id;
      const { username } = req.session;
      const { userId } = req.session;
      res.json({
        status: 200, message: `${username}, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π !`, username, userId,
      });
    }
  } catch (error) {
    console.log('üíÄ üöÄ  file: reg.router.js üöÄ  line 9 üöÄ  router.post üöÄ  error', error);
  }
});

module.exports = router;
